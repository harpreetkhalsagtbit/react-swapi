{"version":3,"sources":["serviceWorker.js","js/Helpers/history.js","js/Components/Commons/TextBox/index.js","js/Components/Commons/PasswordTextBox/index.js","js/Components/Commons/Button/index.js","js/Components/LoginForm/index.js","js/Containers/LoginFormContainer/index.js","js/Actions/Login/index.js","js/Constants/Types/index.js","js/Pages/Login/index.js","js/Components/Planet/index.js","js/Components/PlanetList/index.js","js/Components/PlanetSearchForm/index.js","js/Containers/PlanetSearchFormContainer/index.js","js/Actions/PlanetSearchForm/index.js","js/Pages/Home/index.js","js/Routes/index.js","js/Root/index.js","js/Reducer/Login/index.js","js/Reducer/PlanetSearch/index.js","js/Reducer/index.js","js/main.js","index.js"],"names":["Boolean","window","location","hostname","match","history","createBrowserHistory","TextBox","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","react_default","a","createElement","assign","type","React","PureComponent","PasswordTextBox","Button","_ref","className","objectWithoutProperties","children","LoginForm","console","log","form","onClick","bind","assertThisInitialized","handleChange","event","target","name","setState","previousState","previousProps","objectSpread","defineProperty","Components_Commons_TextBox","onChange","Commons_PasswordTextBox","Components_Commons_Button","disabled","login","isVerifying","LoginFormContainer","connect","ownProps","dispatch","data","promise","Promise","resolve","reject","fetch","concat","username","then","res","json","results","filter","people","birth_year","password","length","getState","response","localStorage","setItem","push","performLoginAction","Login","Containers_LoginFormContainer","Planet","showDetails","details","index","key","population","climate","created","diameter","gravity","orbital_period","surface_water","terrain","PlanetList","list","react","map","js_Components_Planet","SearchStarForms","planets","isSearching","searchLimitExceed","onKeyUp","changeInterval","THRESHOLD","LUKE","toLocaleLowerCase","SEARCH_LIMIT","gotResponse","_this2","clearInterval","setInterval","token","getItem","sessionSearchCount","user","replace","prevSearchTimestamp","searchTimeStampDiff","allowed","Date","now","toLowerCase","_this3","toConsumableArray","placeholder","Components_PlanetList","PlanetSearchFormContainer","PlanetSearch","searchStr","sort","planetA","planetB","populationA","isNaN","performSearchAction","PlanetSearchForm","Home","_this$props","params","removeItem","Containers_PlanetSearchFormContainer","Routes","path","exact","render","Pages_Home","react_router","to","pathname","from","js_Pages_Login","Root","routes","Root_NotFound","NotFound","initState","isLoggedIn","isLogInFailed","combineReducers","todos","arguments","undefined","counter","action","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","es","Root_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ef65ba34.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();","import React from \"react\";\nimport './index.css';\n\nclass TextBox extends React.PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = { value: '' }\n    }\n\n    render() {\n        return <input type=\"text\" {...this.props} />\n    }\n}\n\nexport default TextBox;\n","import React from \"react\";\n\nclass PasswordTextBox extends React.PureComponent {\n    constructor(props) {\n        super(props)\n        this.state = { value: '' }\n    }\n\n    render() {\n        return <input type=\"password\" {...this.props} />\n    }\n}\n\nexport default PasswordTextBox;\n","import React from \"react\";\nimport './index.css'\n\nconst Button = ({className, ...props}) => {\n    return <button className={className} type=\"button\" {...props}>{props.children}</button>\n}\nexport default Button;\n","import React from \"react\";\nimport TextBox from \"../Commons/TextBox\";\nimport PasswordTextBox from \"../Commons/PasswordTextBox\";\nimport Button from \"../Commons/Button\";\n\nclass LoginForm extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    console.log(props, 'props login form')\n    this.state = {\n      form:{}\n    }\n    this.onClick = this.onClick.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange (event) {\n    const { target } = event;\n    const { name, value } = target;\n    this.setState((previousState, previousProps) => {\n      previousState.form = Object.assign({}, {...previousState.form}, {[name]:value})\n      return {\n        form: previousState.form\n      };\n    });\n\n  }\n\n  onClick () {\n    this.props.onClick(this.state.form);\n  }\n  componentDidUpdate() {\n    console.log('props', this.props)\n  }\n  render() {\n    console.log('rendering login form', this.props)\n    return (\n      <div className=\"form-vertical\">\n        <div className=\"input-group\">\n          <label>Username</label>\n          <TextBox className=\"txt\" name=\"username\" onChange={this.handleChange} />\n        </div>\n        <div className=\"input-group\">\n          <label>Password</label>\n          <PasswordTextBox name=\"password\" className=\"txt\" onChange={this.handleChange}/>\n        </div>\n        <div className=\"input-group\">\n        <Button className=\"btn btn-primary btn-large\" disabled={this.props.login.isVerifying} onClick={this.onClick}>\n            {this.props.login.isVerifying?\"Verifying, Please wait...\":\"Log In\"}\n        </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import { connect } from 'react-redux'\nimport { performLoginAction } from '../../Actions/Login'\nimport LoginForm from '../../Components/LoginForm'\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state, ownProps, \"from container\")\n  return {\n    login: state.login\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onClick: (data) => {\n      return dispatch(performLoginAction(data));\n    }\n  }\n}\n\nconst LoginFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm)\n\nexport default LoginFormContainer","import {\n    USER_LOG_IN_INITITATED,\n    USER_LOG_IN_SUCCESS,\n    USER_LOG_IN_FAILED\n} from \"../../Constants/Types\";\n\nimport { history } from \"../../Helpers/history\";\n\nexport const performLoginAction = data => {\n    console.log(\"Login Action perform\", data);\n    var promise = new Promise(function (resolve, reject) {\n        fetch(`https://swapi.co/api/people/?search=${data.username}`)\n        .then(res => res.json())\n        .then(json => {\n            let res = json.results.filter((people) => {\n                if (people.name === data.username && people.birth_year === data.password) {\n                    return true\n                } else {\n                    return false;\n                }\n            });\n            if(res.length) {\n                resolve(true);\n            } else {\n                reject(\"invalid credentials\");\n            }\n        });\n    });\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: USER_LOG_IN_INITITATED\n        });\n        return promise.then(\n            response => {\n                dispatch({\n                    type: USER_LOG_IN_SUCCESS\n                });\n                localStorage.setItem(\"token\", \"token-for-user@\" + data.username);\n                localStorage.setItem(\"sessionSearchCount\", 0);\n                localStorage.setItem(\"prevSearchTimestamp\", \"\");\n                history.push(\"/\");\n            },\n            reject => {\n                dispatch({\n                    type: USER_LOG_IN_FAILED\n                });\n            }\n        );\n    };\n};","\n/**\n * Action Types for Log In\n */\nexport const USER_LOG_IN_INITITATED = \"USER_LOG_IN_INITITATED\";\nexport const USER_LOG_IN_SUCCESS = \"USER_LOG_IN_SUCCESS\";\nexport const USER_LOG_IN_FAILED = \"USER_LOG_IN_FAILED\";\n\n/**\n * Action Types for Planet Search\n */\nexport const PLANET_SEARCH_INITIATED = \"PLANET_SEARCH_INITIATED\";\nexport const PLANET_SEARCH_SUCCESS = \"PLANET_SEARCH_SUCCESS\";\nexport const PLANET_SEARCH_FAILED = \"PLANET_SEARCH_FAILED\";\n","import React from \"react\";\nimport LoginFormContainer from \"../../Containers/LoginFormContainer\";\nimport './index.css';\n\nclass Login extends React.PureComponent {\n  render() {\n    return (\n      <main>\n        <div className=\"login-container\">\n          <h3 className=\"login-title\">Log in</h3>\n          <LoginFormContainer />\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport Button from \"../Commons/Button\";\n\nimport \"./index.css\";\n\nclass Planet extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showDetails: false,\n      details: props.details\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n  onClick() {\n    this.setState((previousState, previousProps) => {\n      return {\n        showDetails: !previousState.showDetails\n      };\n    });\n  }\n  render() {\n    let index = this.props.index;\n    let details = this.props.details;\n    return (\n      <div key={index}>\n        <div className={`size-${index <= 5 ? index : \"other\"} planet-row`}>\n          <div>\n            <span>{details.name}</span>-<span>{details.population}</span>\n          </div>\n          <div>\n            <Button\n              className=\"btn btn-primary btn-large\"\n              onClick={this.onClick}\n            >\n                {this.state.showDetails?\"Hide details\":\"Show details\"}\n            </Button>\n          </div>\n        </div>\n        {this.state.showDetails ? (\n          <div className=\"table\">\n            <div className=\"table-header\">\n              <div className=\"table-header-cell\">Climate</div>\n              <div className=\"table-header-cell\">Created</div>\n              <div className=\"table-header-cell\">Diameter</div>\n              <div className=\"table-header-cell\">Gravity</div>\n              <div className=\"table-header-cell\">Orbital Period</div>\n              <div className=\"table-header-cell\">Surface Water</div>\n              <div className=\"table-header-cell\">Terrain</div>\n            </div>\n            <div className=\"table-body\">\n              <div key={index} className=\"table-rows\">\n                <div className=\"table-row-cell\">{details.climate}</div>\n                <div className=\"table-row-cell\">{details.created}</div>\n                <div className=\"table-row-cell\">{details.diameter}</div>\n                <div className=\"table-row-cell\">{details.gravity}</div>\n                <div className=\"table-row-cell\">{details.orbital_period}</div>\n                <div className=\"table-row-cell\">{details.surface_water}</div>\n                <div className=\"table-row-cell\">{details.terrain}</div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\nexport default Planet;\n","import React, { Fragment } from \"react\";\n\nimport Planet from \"../Planet\";\n\nconst PlanetList = ({ list }) => {\n    return <Fragment>\n        <h3>Order By Population:</h3>\n        {list.map((details, key) => (\n            <Planet\n                key={key}\n                index={key}\n                details={details}\n            />\n        ))}\n    </Fragment>\n}\n\nexport default PlanetList;","import React from \"react\";\nimport TextBox from \"../Commons/TextBox\";\nimport PlanetList from \"../PlanetList\";\n\nclass SearchStarForms extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      form: {},\n      planets: [],\n      isSearching: false,\n      searchLimitExceed:false\n    };\n    this.onKeyUp = this.onKeyUp.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.changeInterval = \"\";\n    this.THRESHOLD = 60000;\n    this.LUKE = \"Luke Skywalker\".toLocaleLowerCase()\n    this.SEARCH_LIMIT = 15;\n  }\n\n  handleChange(event) {\n    const { target } = event;\n    const { name, value } = target;\n    this.setState((previousState, previousProps) => {\n      return {\n        isSearching: false,\n        gotResponse: false,\n        form: Object.assign({}, { ...previousState.form }, { [name]: value })\n      };\n    });\n  }\n  // let token = localStorage.getItem(\"token\");\n  // let sessionSearchCount = localStorage.getItem(\"sessionSearchCount\") || 0;\n  // let user = token.replace(\"token-for-user@\",\"\")\n  // if(user.toLowerCase() !== this.LUKE && sessionSearchCount <= 15) {\n  //     localStorage.setItem(\"sessionSearchCount\", sessionSearchCount + 1);\n  //     reject('Limit Reached')\n  // } else\n\n\n  onKeyUp() {\n    // this.props.onKeyUp(this.state.form);\n    // wait untill user type in something\n    // Don't let call setInterval - clear it, user is still typing\n    clearInterval(this.changeInterval);\n    this.changeInterval = setInterval(() => {\n      let token = localStorage.getItem(\"token\");\n      let sessionSearchCount = +(localStorage.getItem(\"sessionSearchCount\")) || 0;\n      let user = token.replace(\"token-for-user@\",\"\")\n\n      let prevSearchTimestamp = +(localStorage.getItem(\"prevSearchTimestamp\")) || 0;;\n      let searchTimeStampDiff = 0;\n      let allowed = false;\n      // if prevSearchTimestamp is null use current timestamp to\n      if(!prevSearchTimestamp && sessionSearchCount <= this.SEARCH_LIMIT) {\n        allowed = true;\n        localStorage.setItem(\"prevSearchTimestamp\", Date.now());\n      } else {\n        searchTimeStampDiff = Date.now() - prevSearchTimestamp;\n        // if more than 15 searches in a minute by a person other than luke then allow is false\n        if(user.toLowerCase() === this.LUKE) {\n          allowed = true\n        } else if(user.toLowerCase() !== this.LUKE && searchTimeStampDiff <= this.THRESHOLD && (sessionSearchCount <= this.SEARCH_LIMIT)) {\n          allowed = true\n        } else if(searchTimeStampDiff > this.THRESHOLD) {\n          // one minute passed reset\n          allowed = true\n          sessionSearchCount = 0;\n          localStorage.setItem(\"sessionSearchCount\", sessionSearchCount);\n          localStorage.setItem(\"prevSearchTimestamp\", Date.now());\n        }\n      }\n\n      if(allowed) {\n        localStorage.setItem(\"sessionSearchCount\", sessionSearchCount + 1);\n        this.setState((previousState, previousProps) => {\n          return {\n            isSearching: true,\n            searchLimitExceed:false\n          };\n        });\n        this.props.onKeyUp(this.state.form).then(() => {\n          this.setState((previousState, previousProps) => {\n            return {\n              gotResponse: true\n            };\n          });\n        });\n      } else {\n        this.setState({\n          searchLimitExceed:true\n        })\n      }\n      // Typing finished, now you can Do whatever after 2 sec\n      clearInterval(this.changeInterval);\n    }, 1000);\n  }\n  componentDidUpdate() {\n    if (this.state.gotResponse) {\n      this.setState((previousState, previousProps) => {\n        return {\n          isSearching: false,\n          gotResponse: false,\n          planets: [...this.props.planets.planets]\n        };\n      });\n    }\n  }\n  render() {\n    return (\n      <div className=\"form-vertical\">\n        <div className=\"input-group\">\n          <label>Search your favourite Star Wars Planet</label>\n          <TextBox\n            className=\"txt\"\n            name=\"searchStr\"\n            onChange={this.handleChange}\n            onKeyUp={this.onKeyUp}\n            placeholder=\"Search...\"\n          />\n        </div>\n        {/* <PlanetList list={this.state.planets} /> */}\n        {this.state.isSearching ? (\n          \"Searching please wait....\"\n        ) : this.state.planets.length ? (\n          <PlanetList list={this.state.planets} />\n        ) : (\n          this.state.searchLimitExceed?<div>Search Limit Exceed</div>:<div>No result(s) found.</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SearchStarForms;\n","import { connect } from 'react-redux'\nimport { performSearchAction } from '../../Actions/PlanetSearchForm'\nimport PlanetSearchForm from '../../Components/PlanetSearchForm'\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state, ownProps, \"from container\")\n  return {\n    planets: state.PlanetSearch\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    onKeyUp: (data) => {\n      return dispatch(performSearchAction(data));\n    }\n  }\n}\n\nconst PlanetSearchFormContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(PlanetSearchForm)\n\nexport default PlanetSearchFormContainer","import {\n    PLANET_SEARCH_INITIATED,\n    PLANET_SEARCH_SUCCESS,\n    PLANET_SEARCH_FAILED\n} from \"../../Constants/Types\";\n\nexport const performSearchAction = data => {\n    var promise = new Promise(function (resolve, reject) {\n        fetch(`https://swapi.co/api/planets/?search=${data.searchStr}`)\n        .then(res => res.json())\n        .then(json => {\n            if(json.results.length) {\n                json.results = json.results.sort(function(planetA, planetB) {\n                    let populationA = isNaN(+(planetA.population)) ? 0 : +(planetA.population)\n                    let populationB = isNaN(+(planetB.population)) ? 0 : +(planetB.population)\n                    return populationB - populationA;\n                })\n                resolve(json.results);\n            } else {\n                resolve([]);\n                // reject(\"not found\");\n            }\n        });\n    });\n\n    return (dispatch, getState) => {\n        dispatch({\n            type: PLANET_SEARCH_INITIATED\n        });\n        return promise.then(\n            response => {\n                dispatch({\n                    type: PLANET_SEARCH_SUCCESS,\n                    planets: response\n                });\n            },\n            reject => {\n                dispatch({\n                    type: PLANET_SEARCH_FAILED\n                });\n            }\n        );\n    };\n};","import React, { Fragment } from \"react\";\nimport Button from \"../../Components/Commons/Button\";\n\nimport SearchFormContainer from \"../../Containers/PlanetSearchFormContainer\";\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n    this.onClick = this.onClick.bind(this);\n  }\n  onClick() {\n    console.log(this.props)\n    const { match: { params }, history } = this.props;\n    localStorage.removeItem(\"token\")\n    localStorage.removeItem(\"sessionSearchCount\");\n    localStorage.removeItem(\"prevSearchTimestamp\");\n\n    history.push('/login');\n  }\n\n  render() {\n    return (\n      <Fragment>\n        {/* <Header></Header> */}\n        <main>\n          <div className=\"flex-header-row\">\n            <h3 className=\"login-title\"></h3>\n            <h3 className=\"login-title\">Home</h3>\n            <Button\n              className=\"btn btn-primary btn-large\"\n              onClick={this.onClick}\n            >\n              Logout\n            </Button>\n          </div>\n          <SearchFormContainer />\n        </main>\n      </Fragment>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport Login from \"../Pages/Login\";\nimport Home from \"../Pages/Home\";\nimport { Redirect } from \"react-router-dom\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    render(props) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        return <Home {...props} />;\n      } else {\n        return (\n          <Redirect\n            to={{ pathname: \"/login\", state: { from: props.location } }}\n          />\n        );\n      }\n    }\n  },\n  {\n    path: \"/login\",\n    exact: true,\n    render(props) {\n      let token = localStorage.getItem(\"token\");\n      if (token) {\n        return (\n          <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n        );\n      } else {\n        return <Login />;\n      }\n    }\n  }\n];\n","import React from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport routes from \"../Routes\";\nimport { history } from \"../Helpers/history\";\n\nexport default class Root extends React.PureComponent {\n  render() {\n    return (\n      <Router history={history}>\n        <Switch>\n          {routes.map((props, key) => (\n            <Route key={key} {...props} />\n          ))}\n          <Route render={() => <NotFound />} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nlet NotFound = () => <h1>Not Found</h1>;\n","import {\n    USER_LOG_IN_INITITATED,\n    USER_LOG_IN_SUCCESS,\n    USER_LOG_IN_FAILED\n  } from \"../../Constants/Types\";\n  \n  /**\n   * isVerifying - Waiting for Login Action to complete. Don't know yet\n   * wheteher user is logged in or not\n   * True if Action is USER_LOG_IN_INITIATED\n   * False else\n   *\n   * isLoggedIn - Status whether login process is success or not\n   * True if Success False if Failed\n   */\n  const initState = {\n    isVerifying: false,\n    isLoggedIn: false,\n    isLogInFailed: false\n  };\n  export default (state = initState, action) => {\n    console.log(action, \"inreducer\")\n    switch (action.type) {\n      case USER_LOG_IN_INITITATED:\n        // Don't know yet Status of Login Action - Keep waiting, Verifying User\n        return Object.assign({...initState}, { isVerifying: true, isLogInFailed:false });\n      case USER_LOG_IN_SUCCESS:\n        // We have got response from Log In API, set waiting flag to false,\n        // User is Logged in Successfully\n        return Object.assign({},  {...initState}, { isLoggedIn: true });\n      case USER_LOG_IN_FAILED:\n        // We have got response from Log In API, set waiting flag to false,\n        // User Log In failed\n        return Object.assign({}, {...initState}, { isLogInFailed: true });\n      default:\n        return initState;\n    }\n  };\n  ","import {\n    PLANET_SEARCH_INITIATED,\n    PLANET_SEARCH_SUCCESS,\n    PLANET_SEARCH_FAILED\n  } from \"../../Constants/Types\";\n  \n  /**\n   * isVerifying - Waiting for Login Action to complete. Don't know yet\n   * wheteher user is logged in or not\n   * True if Action is PLANET_SEARCH_INITIATED\n   * False else\n   *\n   * isLoggedIn - Status whether login process is success or not\n   * True if Success False if Failed\n   */\n  const initState = {\n    isSearching: false,\n    planets:[]\n  };\n  export default (state = initState, action) => {\n    switch (action.type) {\n      case PLANET_SEARCH_INITIATED:\n        // Don't know yet Status of Login Action - Keep waiting, Verifying User\n        return Object.assign({...state}, { isSearching: true });\n      case PLANET_SEARCH_SUCCESS:\n        // We have got response from Log In API, set waiting flag to false,\n        // User is Logged in Successfully\n        return Object.assign({...state}, { isSearching: false, planets:[...action.planets] });\n      case PLANET_SEARCH_FAILED:\n        // We have got response from Log In API, set waiting flag to false,\n        // User Log In failed\n        return Object.assign({...state}, { isSearching: false });\n      default:\n        return initState;\n    }\n  };\n  ","/**\n * Root Reducer\n */\n\nimport { combineReducers } from \"redux\";\nimport login from \"./Login\";\nimport PlanetSearch from \"./PlanetSearch\";\n\nlet todos = (state = {}) => {\n  return {\n    list: []\n  };\n};\n\nlet counter = (state = {}) => {\n  return {\n    counter: 0\n  };\n};\n\nexport default combineReducers({\n  todos,\n  counter,\n  login,\n  PlanetSearch\n//   IndexedDB,\n//   Offline,\n//   Entities,\n//   EntityValues\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport Root from \"./Root\";\nimport rootReducer from \"./Reducer\";\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nconst render = () =>\n  ReactDOM.render(\n    <Provider store={store}>\n        <Root />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n\n  export default render;","import './index.css';\n// import App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport render from './js/main'\n\nrender();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}